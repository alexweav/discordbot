language: elixir

elixir:
  - '1.7.3'

services:
  - docker

env:
  - APP_NAME=discordbot AWS_REGION=us-east-2 CLUSTER_NAME=discordbot-prod SERVICE_NAME=DiscordBot

jobs:
  include:
    - stage: test
      install:
        - mix local.rebar --force
        - mix local.hex --force
        - mix deps.get
      script:
        - mix format --check-formatted
        - mix test --no-start

    - stage: deploy
      install:
        - docker --version
        - pip install --user awscli
        - export PATH=$PATH:$HOME/.local/bin
        - eval $(aws ecr get-login --no-include-email --region "${AWS_REGION}")
        - export AWS_ACCOUNT_ID="$(aws sts get-caller-identity --output text --query 'Account')"
        - printf "use Mix.Config\n\nconfig :discordbot,\n  token: \"${DISCORD_TOKEN}\"" > rel/config/config.exs
      script:
        - docker build -t "${APP_NAME}" .
        - docker tag "${APP_NAME}":latest "${AWS_ACCOUNT_ID}".dkr.ecr."${AWS_REGION}".amazonaws.com/"${APP_NAME}":latest
        - docker push "${AWS_ACCOUNT_ID}".dkr.ecr."${AWS_REGION}".amazonaws.com/"${APP_NAME}":latest
        - aws ecs update-service --cluster "${CLUSTER_NAME}" --service "${SERVICE_NAME}" --region "${AWS_REGION}" --force-new-deployment

